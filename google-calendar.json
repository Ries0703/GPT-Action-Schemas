{
  "openapi": "3.1.0",
  "info": {
    "title": "Google Calendar API",
    "description": "API for managing Google Calendar events.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://www.googleapis.com/calendar/v3",
      "description": "Google Calendar API server"
    }
  ],
  "paths": {
    "/calendars/{calendarId}/events": {
      "post": {
        "operationId": "addEventWithConference",
        "summary": "Adds an event to the specified calendar with conference details",
        "parameters": [
          {
            "name": "calendarId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the calendar where the event will be added"
          },
          {
            "name": "conferenceDataVersion",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "enum": [
                1
              ]
            },
            "description": "The version of conference data used. Should be set to 1."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "summary": {
                    "type": "string",
                    "description": "Title of the event"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the event"
                  },
                  "start": {
                    "type": "object",
                    "properties": {
                      "dateTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start time of the event"
                      },
                      "timeZone": {
                        "type": "string",
                        "description": "Time zone of the event start time"
                      }
                    },
                    "required": [
                      "dateTime"
                    ]
                  },
                  "end": {
                    "type": "object",
                    "properties": {
                      "dateTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "End time of the event"
                      },
                      "timeZone": {
                        "type": "string",
                        "description": "Time zone of the event end time"
                      }
                    },
                    "required": [
                      "dateTime"
                    ]
                  },
                  "conferenceData": {
                    "type": "object",
                    "properties": {
                      "createRequest": {
                        "type": "object",
                        "properties": {
                          "requestId": {
                            "type": "string",
                            "description": "A unique identifier for the request"
                          },
                          "conferenceSolutionKey": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "The type of conference solution, e.g., 'hangoutsMeet'"
                              }
                            },
                            "required": [
                              "type"
                            ]
                          }
                        },
                        "required": [
                          "requestId",
                          "conferenceSolutionKey"
                        ]
                      }
                    },
                    "required": [
                      "createRequest"
                    ]
                  },
                  "attendees": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "description": "Email of the attendee"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "summary",
                  "start",
                  "end"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Event ID"
                    },
                    "summary": {
                      "type": "string",
                      "description": "Title of the event"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the event"
                    },
                    "start": {
                      "type": "object",
                      "properties": {
                        "dateTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Start time of the event"
                        },
                        "timeZone": {
                          "type": "string",
                          "description": "Time zone of the event start time"
                        }
                      }
                    },
                    "end": {
                      "type": "object",
                      "properties": {
                        "dateTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "End time of the event"
                        },
                        "timeZone": {
                          "type": "string",
                          "description": "Time zone of the event end time"
                        }
                      }
                    },
                    "conferenceData": {
                      "type": "object",
                      "properties": {
                        "entryPoints": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "entryPointType": {
                                "type": "string",
                                "description": "The type of entry point, e.g., 'video'"
                              },
                              "uri": {
                                "type": "string",
                                "description": "The URI of the entry point"
                              },
                              "label": {
                                "type": "string",
                                "description": "The label for the entry point"
                              }
                            }
                          }
                        },
                        "conferenceSolution": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the conference solution"
                            },
                            "iconUri": {
                              "type": "string",
                              "description": "The URI of the conference solution's icon"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "listEvents",
        "summary": "List all events in a time period",
        "description": "Retrieves a list of events within a specified time period for a calendar.",
        "parameters": [
          {
            "name": "calendarId",
            "in": "path",
            "required": true,
            "description": "The calendar identifier.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeMin",
            "in": "query",
            "required": true,
            "description": "Lower bound (inclusive) of the event's start time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "timeMax",
            "in": "query",
            "required": true,
            "description": "Upper bound (exclusive) of the event's end time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "summary": {
                            "type": "string"
                          },
                          "start": {
                            "type": "object",
                            "properties": {
                              "dateTime": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          },
                          "end": {
                            "type": "object",
                            "properties": {
                              "dateTime": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/me/calendarList": {
      "get": {
        "operationId": "listCalendar",
        "summary": "List all calendar names and IDs",
        "description": "Retrieves a list of calendars for the authenticated user.",
        "responses": {
          "200": {
            "description": "A list of calendars",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "summary": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}
